name: Sort and Filter

on:
  workflow_run:
    workflows:
      - Phishing Domain Retrieval
    types:
      - completed
  workflow_dispatch:

jobs:
  sort-and-filter:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
    
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Detect system architecture and download the correct Rust installer
      - name: Install Rust and Cargo for 64-bit Windows
        if: runner.os == 'Windows' && runner.arch == 'X64'
        run: |
          curl https://win.rustup.rs/x86_64 -o rustup-init.exe
          .\rustup-init.exe -y
        shell: cmd

      - name: Install Rust and Cargo for 32-bit Windows
        if: runner.os == 'Windows' && runner.arch == 'X86'
        run: |
          curl https://win.rustup.rs/i686 -o rustup-init.exe
          .\rustup-init.exe -y
        shell: cmd

      # Add Cargo to PATH on Windows
      - name: Add Cargo to PATH
        run: |
          echo C:\Users\runneradmin\.cargo\bin >> $env:GITHUB_PATH
        shell: powershell

      # Verify Rust and Cargo installation on Windows
      - name: Check Rust and Cargo installation
        run: |
          rustup --version
          cargo --version
        shell: cmd

      # Install rsfunceble via Cargo on Windows
      - name: Install rsfunceble
        run: cargo install rsfunceble
        shell: cmd

      # Run rsfunceble commands for filtering domains
      - name: Run rsfunceble
        run: |
          rsfunceble -i data\nsfw\nsfw_sites.txt -o data\nsfw\nsfw_sites -c 1000000 -v
          rsfunceble -i data\malicious\phishing_sites.txt -o data\malicious\phishing_sites -c 1000000 -v
          rsfunceble -i data\malicious\malware_sites.txt -o data\malicious\malware_sites -c 1000000 -v
        shell: cmd
      
      - name: Run sort.py
        run: python sort.py
        shell: cmd
    
      - name: List files after sort
        run: git status
        shell: cmd
    
      - name: Commit and Push
        run: |
          git config user.name github-actions[bot]
          git config user.email 41898282+github-actions[bot]@users.noreply.github.com
          git add .
          if git diff-index --quiet HEAD --; then
            echo "No changes to commit"
          else
            git commit -m "Sort and update links"
            for /L %i in (1,1,5) do (
              git push && exit /b || (echo Retrying push... (%i) & timeout /t 5)
            )
        shell: cmd
